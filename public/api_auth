api
layer between user and application logic


to build a good api is a serious problem
api is requested by multiple sources
became popular quite recently - spa followed

why is important:

it is public and used by many users thus needs to be properly designed and realised
must be scalable
sustain load
needs to be documented

RPC - most popular method to make an api

rpc is prefferable as post
'/rpc'

rpc doesn't care much about http principles 


go has internal rpc

call -> pack -> send -> recieve -> unpack -> resolve

what if we can't have go anywhere? - json rpc

spec to talk in rpc through json

{json ver, method, args}

rpc is actually old - rest comes next

create read update delete


